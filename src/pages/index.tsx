import { GetStaticProps } from 'next';
import Head from 'next/head';
import { Model, ModelId } from 'src/lib/schema';
import { geAllModelIds, getModelData } from 'src/lib/static/data';
import styles from '../styles/Home.module.scss';

interface Props {
    modelIds: ModelId[];
    modelData: Record<ModelId, Model>;
    other: string;
}

export default function Home({ modelIds, modelData, other }: Props) {
    return (
        <>
            <Head>
                <title>OpenModelDB</title>
                <meta
                    content="Generated by create next app"
                    name="description"
                />
                <meta
                    content="width=device-width, initial-scale=1"
                    name="viewport"
                />
                <link
                    href="/favicon.ico"
                    rel="icon"
                />
            </Head>
            <main className={styles.main}>
                <div>
                    <p>{modelIds.length} models</p>
                    <br />
                    <pre>{other}</pre>
                    <pre>{modelIds.map((id) => `${id} - ${modelData[id].license ?? 'no license'}`).join('\n')}</pre>
                </div>
            </main>
        </>
    );
}

export const getStaticProps: GetStaticProps<Props> = async (_context) => {
    const modelIds = await geAllModelIds();
    const modelData = await getModelData(modelIds);
    return {
        props: {
            modelIds: modelIds,
            modelData: Object.fromEntries(modelIds.map((id, i) => [id, modelData[i]])),
            other: [...new Set(modelData.map((m) => m.license))].join('\n') + '\n\n',
        },
    };
};
